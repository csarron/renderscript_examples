/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2016 - Alberto Marchetti <alberto.marchetti@hydex11.net>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

apply plugin: 'com.android.application'

import org.apache.tools.ant.taskdefs.condition.Os;

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "net.hydex11.fastexample"
        minSdkVersion 18
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        renderscriptTargetApi 18

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
        debug {
            debuggable = true
        }
    }

    // This settings tell Android Studio not to use its default NDK buld process,
    // as it does not support custom CPP flags, nor Android.mk file.
    sourceSets.main {
        // Sets location where Android Studio will look for
        // .so library files (output of ndk-build)
        jniLibs.srcDir 'src/main/libs'
        // Prevents Android Studio indexing C++ source code
        jni.srcDirs = []
    }

    // Calls regular ndk-build(.cmd) script from app directory
    task ndkBuild(type: Exec) {
        def ndkDir = project.plugins.findPlugin('com.android.application').sdkHandler.getNdkFolder()

        def ndkBuild = ""
        if(Os.isFamily(Os.FAMILY_WINDOWS))
        {
            ndkBuild = "$ndkDir\\ndk-build.cmd"
        }
        else
        {
            ndkBuild = "$ndkDir/ndk-build"
        }

        commandLine "$ndkBuild", "NDK_PROJECT_PATH=build/intermediates/ndk",
                // Output libraries folder
                "NDK_LIBS_OUT=src/main/libs",
                // Android.mk file location (omit if not needed)
                "APP_BUILD_SCRIPT=src/main/jni/Android.mk",
                // Application.mk file location (omit if not needed)
                "NDK_APPLICATION_MK=src/main/jni/Application.mk",
                // Verbose, just to better understand what happens
                "V=1"

    }

    // NDK build task must execute before Java compile one
    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.1'
}
